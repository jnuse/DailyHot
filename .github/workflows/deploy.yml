# 用于构建和部署静态站点到 GitHub Pages 的工作流
name: Deploy static site to Pages

on:
  # 在针对 main 分支的 push 事件上运行
  push:
    branches: ["master"]

  # 允许你从 Actions 页签手动运行此工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过在运行中和最新排队之间的运行。
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成。
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 💡 核心亮点：安装 pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8 # 你可以指定 pnpm 版本，或让它自动检测

      # 💡 核心亮点：设置 Node.js 并为 pnpm 配置缓存
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # 使用一个较新的 LTS Node.js 版本
          cache: 'pnpm' # 关键！告诉 setup-node 为 pnpm 缓存依赖

      - name: Install dependencies
        run: pnpm install # 运行 pnpm install 来安装依赖

      - name: Build static site
        run: pnpm build # 运行 pnpm build 来构建项目

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist # 指定要上传的构建输出目录

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # 依赖于 build 任务成功完成
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
